$md-width: 600px !default;
$lg-width: 1024px !default;
$spacing: 25px !default;

container {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    * {
        box-sizing: border-box;
    }
}

row {
    display: flex;
    justify-content: space-evenly;
    align-items: stretch;
    flex-wrap: wrap;
    margin-top: $spacing;
}

// take 12 columns by default
column {
    display: flex;
    flex-direction: column;
    flex-grow: unset;
    flex-basis: calc(((100% - (#{$spacing} * 13)) / 12) * 12 + (#{$spacing} * 11));
    margin-bottom: $spacing;
}

@mixin grid_width($cols) {
    flex-grow: unset;
    flex-basis: calc(((100% - (#{$spacing} * 13)) / 12) * #{$cols} + (#{$spacing} * (#{$cols} - 1)));
    margin-bottom: $spacing;
}

@mixin column-classes($name) {
    @for $i from 1 through 12 {
        column.#{$name}-#{$i} {
            @include grid_width($i);
        }
    }
}

@mixin small-classes() {
    @include column-classes(sm);
}

@mixin medium-classes() {
    @include column-classes(md);
}

@mixin large-classes() {
    @include column-classes(lg);
}

// max- and min-width are inclusive
// small
@mixin apply-to-sm {
    @media(max-width: $md-width) {
        @content;
    }
}

// medium
@mixin apply-to-md {
    @media(min-width: $md-width + 1) and (max-width: $lg-width) {
        @content;
    }
}

// large
@mixin apply-to-lg {
    @media(min-width: $lg-width + 1) {
        @content;
    }
}

@include apply-to-sm() {
    @include small-classes;
    .hide-sm {
        display: none !important;
    }
}

@include apply-to-md() {
    @include small-classes;
    // override small sizes with medium sizes if md are specified
    @include medium-classes;
    .hide-md {
        display: none !important;
    }
}

@include apply-to-lg() {
    @include small-classes;
    @include medium-classes;
    @include large-classes;
    .hide-lg {
        display: none !important;
    }
}